(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{397:function(s,a,n){"use strict";n.r(a);var t=n(54),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"js规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js规范"}},[s._v("#")]),s._v(" JS规范")]),s._v(" "),n("h2",{attrs:{id:"基本准则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本准则"}},[s._v("#")]),s._v(" 基本准则")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("方法长度，不超过100行")])]),s._v(" "),n("li",[n("p",[s._v("禁止使用var，强制使用const与let")])]),s._v(" "),n("li",[n("p",[s._v("使用字符串模板(注意小程序兼容性)(下方提供案例)")])]),s._v(" "),n("li",[n("p",[s._v("尽量使用字面形变量(下方提供案例)")])]),s._v(" "),n("li",[n("p",[s._v("数组尽量使用操作函数。(如push等)(下方提供案例)")])]),s._v(" "),n("li",[n("p",[s._v("对象与数组，推荐使用解构(下方提供案例)")])]),s._v(" "),n("li",[n("p",[s._v("能用箭头函数，不使用普通函数")])]),s._v(" "),n("li",[n("p",[s._v("推荐简写")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/** 不建议 **/\nconst str = \"My name is \" + name;\n\nconst array = new Array();\nconst obj = new Object();\narray[0] = '你好';\n\nconst first = arr[0];\nconst second = arr[1];\n\nconst atom = {\n  value: 1,\n  addValue: function (value) {\n    return value;\n  },\n};\n\n/** 建议 **/\nconst str = `My name is ${name}`;\n\nconst array = [];\nconst obj = {};\narray.push('你好');\n\nconst { first, second }  = arr;\n\nconst atom = {\n  obj: 1,\n  addValue(value) {\n    return value;\n  },\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("h2",{attrs:{id:"函数准则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数准则"}},[s._v("#")]),s._v(" 函数准则")]),s._v(" "),n("ul",[n("li",[s._v("尽量只做一件事")]),s._v(" "),n("li",[s._v("尽量短小，最高不超过100行")]),s._v(" "),n("li",[s._v("推荐纯函数，尽量不写非纯函数(下方有说明)")]),s._v(" "),n("li",[s._v('推荐采用"函数式编程"的思维(下方有说明)')]),s._v(" "),n("li",[s._v('推荐使用"高阶函数"(下方有说明)')]),s._v(" "),n("li",[s._v("推荐函数柯里化(下方有说明)")]),s._v(" "),n("li",[s._v("了解递归函数")])]),s._v(" "),n("hr"),s._v(" "),n("p",[n("strong",[s._v("纯函数的定义")]),s._v(": 当一个函数的输出不受外部环境影响，同时也不影响外部环境时，该函数就是纯函数，也就是它只关注逻辑运算和数学运算，同一个输入总得到同一个输出。")]),s._v(" "),n("p",[s._v("纯函数如:Array.prototype.map,  非纯函数如: Array.ptototype.splice")]),s._v(" "),n("hr"),s._v(" "),n("p",[n("strong",[s._v("函数式编程的理解：")])]),s._v(" "),n("p",[s._v("1.避免多次赋值变量")]),s._v(" "),n("p",[s._v("2.拒绝使用eval")]),s._v(" "),n("p",[s._v("3.不修改内核对象")]),s._v(" "),n("p",[s._v("4.优先使用函数而不是方法（了解一下javascript中函数和方法的区别: https://blog.csdn.net/qq_44163269/article/details/104627274）")]),s._v(" "),n("hr"),s._v(" "),n("p",[n("strong",[s._v("高阶函数的概念：")]),s._v(" 以一个函数作为参数，以一个函数作为结果。如常用的reduce。")]),s._v(" "),n("h2",{attrs:{id:"循环方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#循环方法"}},[s._v("#")]),s._v(" 循环方法")]),s._v(" "),n("p",[s._v("对比优势for, forEach, map, filter, reduce, find, some等")]),s._v(" "),n("ul",[n("li",[s._v("*遍历当前对象: forEach")]),s._v(" "),n("li",[s._v("*计算总算：reduce")]),s._v(" "),n("li",[s._v("*过滤数据：filter")]),s._v(" "),n("li",[s._v("*获取新对象：map")]),s._v(" "),n("li",[s._v("查找新对象：find")]),s._v(" "),n("li",[s._v("每一项返回true,则返回true： every")]),s._v(" "),n("li",[s._v("任一项返回true，则返回true：some")])]),s._v(" "),n("h2",{attrs:{id:"判断方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断方法"}},[s._v("#")]),s._v(" 判断方法")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("双重否定!!")])]),s._v(" "),n("li",[n("p",[s._v("|| 与 &&")])])]),s._v(" "),n("p",[s._v("表达式a && 表达式b :  计算表达式a（也可以是函数）的运算结果，\n如果为 True, 执行表达式b（或函数），并返回b的结果；\n如果为 False，返回a的结果；")]),s._v(" "),n("p",[s._v("表达式a || 表达式b :  计算表达式a（也可以是函数）的运算结果，\n如果为 Fasle, 执行表达式b（或函数），并返回b的结果；\n如果为 True，返回a的结果；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("if (this.uploadData.length < this.num){\n    this.showUploadBtn = true;\n}\n\n优化后：\n    this.uploadData.length < this.num && ( this.showUploadBtn = true)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("ul",[n("li",[s._v("三元表达式")])]),s._v(" "),n("p",[s._v("能用三元表达式解决的问题，尽量不使用if。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    if(name === '小明'){\n        this.show = true\n    }else{\n        this.show = false\n    }\n\n    优化后：\n    this.show = name === '小明' ? true : false;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("ES10")])]),s._v(" "),n("li",[n("p",[s._v("多层判断以上，使用switch或对象获取。")])])]),s._v(" "),n("h2",{attrs:{id:"异步方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步方案"}},[s._v("#")]),s._v(" 异步方案")]),s._v(" "),n("p",[s._v("异步解决方案统一使用async, await。无需捕捉异常的情况下，尽快少使用promise, then。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" const res = await test1().catch((err)=>{\n        console.log(new Error)\n }) \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);